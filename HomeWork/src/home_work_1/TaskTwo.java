package home_work_1;

/*
Изучить приоритетность операторов по таблице.
Сначала посчитать результаты всех ниже приведённых примеров устно, а потом проверить в IDE (в случае ошибок свериться с таблицей приоритетов,
повторять просчёт примеров до полного соответствия).
Результатом МОЖЕТ БЫТЬ ОШИБКА компиляции, МОЖЕТ БЫТЬ ОШИБКА выполнения программы или корректный результат.
Все значения в этих переменных должны быть записаны в int и boolean переменные.
Напротив каждой строчки нужно написать комментарий с результатом и объяснением почему вы получили такой результат.
 */

public class TaskTwo {
    public static void main(String[] args) {
        int a = 5, b = 2, c = 8, d = 7, e = 20, f = 22, g = 68, h = 3, m = 12, n = 6, o = 119;
        boolean tr = true;
        boolean fl = false;
        System.out.println(a + b / c); // результат от целочисленного деления 0, суммируем с числом 5
        System.out.println((a + b) / c); // целочисленное от деления 7 на 8 = 0,875
        System.out.println((a + b++) / c); // целочисленное от деления 7 на 8 = 0,875
        System.out.println((a + b++) / --c); // целочисленное от деления / на 8 = 1
        System.out.println((a * b >> b++) / --c); //
        System.out.println((a + d > e ? g : f * b >> b++) / --c); // 7 > 20 = false, следовательно тернарный оператор не отрабатывается, и результатом деления 2 на 7 будет 0
        //System.out.println((a + d > e ? g >= g : f * b >> b++) / --c); // ошибка компиляции, булевый результат сравнения >= не может быть разделен на число
        System.out.println(n - b > h && m * m <= o); // выводим на экран результат сравнения выражений: 4>3 = true, 144 < 119 = false; true && false = false
        System.out.println(true && false); //  true && false = false
        System.out.println(b++);
    }

}
